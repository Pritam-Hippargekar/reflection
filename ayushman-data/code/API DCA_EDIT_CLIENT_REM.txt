
YPP-14780 API DCA_EDIT_CLIENT_REM
=================================

public PartnerApisResponse editClientRem(PartnerApisRequest request, Partner partner) {
    	log.info("request to edit client remitter {} for partner {}",request,partner.getId());
    	try {
    		
    		//Check for missing parameter
	    	if(StringUtils.isAnyBlank(request.getRequestId(),request.getP1(),request.getP2(),request.getP5())) {
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "P006"))); 
	    	}
	    	//Check for client identifier presence
	    	Optional<PartnerClient> partnerClient = this.partnerClientRepository.findByClientIdentifierAndPartnerId(request.getP1(), partner.getId());
	    	if(!partnerClient.isPresent()) {
	    		log.info("Invalid client identifier {}",request.getP1());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA005"))); 
	    	}
			if (PartnerClientPurposeEnum.TRADE.equals(partnerClient.get().getPurpose())) {
				log.info("client is onboarded for {}", partnerClient.get().getPurpose());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA057"))); 
			}
	    	//Check for client inactive
	    	if(!Status.ACTIVE.equals(partnerClient.get().getStatus())) {
	    		log.info("Client inactive {}", partnerClient.get().getStatus());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA029"))); 
	    	}
	    	//Check for Remitter presence
	    	Optional<PartnerClientRemitter> partnerClientRemitter = this.partnerClientRemitterRepository.findByRemitterIdentifierAndPartnerClientIdAndPartnerId(request.getP2(),partnerClient.get().getId(), partner.getId());
	    	if(!partnerClientRemitter.isPresent()) {
	    		log.info("Invalid remitter identifier {}", request.getP2());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA050"))); 
	    	}
	    	 if(partnerClient.get().getIsSuspended() == Boolean.TRUE) {
            	 log.info("Client is suspended {}", partnerClient.get().getIsSuspended());
            	 return new PartnerApisResponse(DAErrorCode.CLIENT_IS_SUSPENDED);
            }

	    	PartnerClientRemitter partnerClientRemitterObj = partnerClientRemitter.get();
	    	//Account number and IFSC code validation
	    	if(!StringUtils.isEmpty(request.getP3())) {
	    		if(!request.getP3().matches("[a-zA-Z0-9]+")) {
	    			log.info("Invalid remitter account no {}",request.getP3());
	                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA052"))); 
	    		}
	    		partnerClientRemitterObj.setAccountNumber(request.getP3());
	    	}
	    	if(!StringUtils.isEmpty(request.getP4())) {
	    		if(!RandomUtil.isValidIFSCode(request.getP4())) {
	    			log.info("Invalid remitter account IFSC {}",request.getP4());
	                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA053"))); 
	    		}
	    		partnerClientRemitterObj.setIfscCode(request.getP4());
	    	}
	    	//Check for status
	    	if(!("ACTIVE".equals(request.getP5()) || "INACTIVE".equals(request.getP5()))) {
	    		log.info("Invalid status {}", request.getP5());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA016"))); 
	    	}
	    	partnerClientRemitterObj.setRemitterStatus(Status.valueOf(request.getP5()));
	        Long yphubUserId ;
            if(request.getChannel().equalsIgnoreCase(ChannelEnum.API.name())) {
            	yphubUserId= yPHubUserRepository.findByOwnerIdAndOwnerTypeAndStatus(partner.getId(), OwnerTypeEnum.PARTNER, Status.ACTIVE).get().getId();
            }else {
            	yphubUserId = request.getYpHubUserId();
            }
	    	partnerClientRemitterObj.setUpdatedBy(yphubUserId);
	    	this.partnerClientRemitterRepository.save(partnerClientRemitterObj);
	    	//Success response
	    	PartnerApisResponse partnerApisResponse = new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "00")));
	    	partnerApisResponse.setRequestId(request.getRequestId());
	    	partnerApisResponse.setStatus("SUCCESS");
	    	return partnerApisResponse;
        } catch(Exception ex) {
        	log.debug("Exception in edit client remitter : {}" + ex.getLocalizedMessage());
            return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_EDIT_CLIENT_REM, "YPP", "", "DCA054"))); 
        }
    }