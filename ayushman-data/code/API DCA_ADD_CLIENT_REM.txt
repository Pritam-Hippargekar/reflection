
YPP-14779 API DCA_ADD_CLIENT_REM
====================================

public PartnerApisResponse addClientRem(PartnerApisRequest request, Partner partner) {
        log.info("Request to add Client Remitter : Request {}, Partner {}", request, partner.getId());
        try {
            if(StringUtils.isAnyBlank(request.getP2(), request.getP3(), request.getP4()) || (request.getChannel().equalsIgnoreCase(ChannelEnum.API.name()) && StringUtils.isBlank(request.getP1()))) {
                log.info("Parameter missing");
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "P006")));
            }
            if (!request.getP3().matches("^[A-Za-z0-9]{3,6}$")) {
                log.info("Invalid Remitter Identifier {}", request.getP3());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA050")));
            }
       	 if (!request.getP4().matches("^[a-zA-Z0-9./ ]+$")) {
             log.info("Invalid Name {}", request.getP4());
             return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA075")));
         }
            if (!request.getP1().matches("[a-zA-Z0-9]+")) {
				log.info("Invalid Partner Reference Number {}",request.getP1());
	             return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA081")));
			}
            if (request.getChannel().equalsIgnoreCase(ChannelEnum.API.name())) {
            	Optional<PartnerClientRemitter> referenceNumberAndPartnerId = partnerClientRemitterRepository.findByPartnerReferenceNumberAndPartnerId(request.getP1(), partner.getId());
            	if (referenceNumberAndPartnerId.isPresent()) {
            		log.info("Partner Ref No {} already exist for partner id {}", request.getP1(), partner.getId());
   	             return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA049")));
            	}
            }
            Optional<PartnerClient> clientOptional = partnerClientRepository.findByClientIdentifierAndPartnerId(request.getP2(), partner.getId());
            if (!clientOptional.isPresent()) {
                log.info("Invalid Client Identifier {}", request.getP2());
  	             return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA005")));
            } else if (!clientOptional.get().getStatus().equals(Status.ACTIVE)) {
                log.info("Client with Identifier {} is not active", request.getP2());
 	             return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA029")));            }
            if(PartnerClientPurposeEnum.TRADE.equals(clientOptional.get().getPurpose())){
				log.info("client is onboarded for {}", clientOptional.get().getPurpose());
	             return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA057")));            }
            if(!PartnerClientPurposeEnum.DC_AGGREGATOR.equals(clientOptional.get().getPurpose())){
            	log.info("client is onboarded for {}", clientOptional.get().getPurpose());
            	return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA057")));            }
            if (partnerClientRemitterRepository.existsByRemitterIdentifierAndPartnerId(request.getP3(), partner.getId())) {
                log.info("Remitter Identifier {} already for partner id {}", request.getP3(), partner.getId());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA051"))); 
            }
            if(clientOptional.get().getIsSuspended() == Boolean.TRUE) {
           	 log.info("Client is suspended {}", clientOptional.get().getIsSuspended());
           	 return new PartnerApisResponse(DAErrorCode.CLIENT_IS_SUSPENDED);
           }
            
            PartnerDASetup partnerDASetup = partnerDASetupRepository.findByPartnerId(partner.getId()).get();
            PartnerClientRemitter remitter = new PartnerClientRemitter();
            if (partnerDASetup.getRemitterAccountValidation()) {
                if (StringUtils.isAllBlank(request.getP5(), request.getP6())) {
                    log.info("Parameter missing accountNo {} IfscCode {} ",request.getP5(),request.getP6());
                    return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA058"))); 
                }
                if(StringUtils.isAnyBlank(request.getP5(), request.getP6())) {
                    log.info("Parameter missing accountNo {} IfscCode {} ",request.getP5(),request.getP6());
                    return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "P006"))); 
                }
            }
            if (!StringUtils.isEmpty(request.getP5()) && !RandomUtil.isValidAccountNo(request.getP5())) {
                log.info("Invalid Remitter Account {}", request.getP5());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA052"))); 
            } else if (!StringUtils.isEmpty(request.getP6()) && !RandomUtil.isValidIFSCode(request.getP6())) {
                log.info("Invalid Remitter IFSC {}", request.getP6());
                return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA053"))); 
            }
            remitter.accountNumber(request.getP5()).ifscCode(request.getP6());
            Long yphubUserId ;
            if(request.getChannel().equalsIgnoreCase(ChannelEnum.API.name())) {
            	yphubUserId= yPHubUserRepository.findByOwnerIdAndOwnerTypeAndStatus(partner.getId(), OwnerTypeEnum.PARTNER, Status.ACTIVE).get().getId();
            }else {
            	yphubUserId = request.getYpHubUserId();
            }
          Optional<YPHubUser> yphubUser=  yPHubUserRepository.findByOwnerIdAndOwnerTypeAndStatus(partner.getId(), OwnerTypeEnum.PARTNER, Status.ACTIVE);
            PartnerClient partnerClient = clientOptional.get();
            remitter.remitterIdentifier(request.getP3()).partnerReferenceNumber(request.getP1()).remitterName(request.getP4()).partner(partner)
                .partnerClient(partnerClient).onBoardedBy(yphubUserId).remitterStatus(Status.ACTIVE);
            remitter.setChannel(request.getChannel().equalsIgnoreCase(ChannelEnum.API.name()) ? ChannelEnum.API : ChannelEnum.YPHUB);

            ECollectAccount eCollectAccount = new ECollectAccount().ownerType(ECollectOwnerEnum.PARTNER_CLIENT_REMITTER).partner(partnerClient.getPartner())
                    .accountNo(getEcollectAccountNumber());
            remitter.setEcollectNumber(eCollectAccount.getAccountNo());
            partnerClientRemitterService.create(remitter, eCollectAccount);
            PartnerApisResponse response = new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "00")));
            response.setStatus("SUCCESS");
            response.setPartnerReferenceNumber(request.getP1());
            response.setClientIdentifier(request.getP2());
            response.setRemitterIdentifier(request.getP3());
            response.setECollectAccountNumber(eCollectAccount.getAccountNo());

            return response;
        } catch (Exception e) {
            log.error("Add Client Remitter Exception ", e);
            return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(DCA_DCA_ADD_CLIENT_REM, "YPP", "", "DCA048"))); 
        }
    }

    public PartnerClientRemitter create(PartnerClientRemitter partnerClientRemitter, ECollectAccount account) {
        log.debug("Request to create PartnerClientRemitter : {}", partnerClientRemitter);
        PartnerClientRemitter result = partnerClientRemitterRepository.save(partnerClientRemitter);
        account.ownerId(result.getId());
        eCollectAccountRepository.save(account);
        return result;
    }