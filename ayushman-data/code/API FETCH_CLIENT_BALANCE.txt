
YPP-14772 API FETCH_CLIENT_BALANCE
====================================

private PartnerApisResponse fetchClientBalance(PartnerApisRequest partnerApisRequest, Partner partner) {
		log.info("request to fetch client balance: {}");
		try {
			// Check for missing parameter
			if (StringUtils.isAnyBlank(partnerApisRequest.getRequestId(), partnerApisRequest.getP1())) {
		   		 return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(CP_FETCH_CLIENT_BALANCE, "YPP", "", "P006")));
			}
			// Check for client identifier presence
			Optional<PartnerClient> partnerClient = this.partnerClientRepository
					.findByClientIdentifierAndPartnerId(partnerApisRequest.getP1(), partner.getId());
			if (!partnerClient.isPresent()) {
				log.info("Invalid client identifier {}", partnerApisRequest.getP1());
		   		 return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(CP_FETCH_CLIENT_BALANCE, "YPP", "", "DCA005")));
			}
			// Check for status
			if (!Status.ACTIVE.equals(partnerClient.get().getStatus())) {
				log.info("Invalid status {}", partnerApisRequest.getP3());
				return new PartnerApisResponse(DAErrorCode.CLIENT_INACTIVE);
			}
			// Success response
			PartnerApisResponse partnerApisResponse = new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(CP_FETCH_CLIENT_BALANCE, "YPP", "", "00")));
			partnerApisResponse.setRequestId(partnerApisRequest.getRequestId());
			partnerApisResponse.setStatus("SUCCESS");
			partnerApisResponse.setClientIdentifier(partnerClient.get().getClientIdentifier());
			partnerApisResponse
					.setPartnerClientBalance(partnerClient.get().getLimitAccount().getCurrentBalance().toString());
			return partnerApisResponse;
		} catch (Exception ex) {
			log.debug("Exception in edit source account : {}" + ex.getLocalizedMessage());
	   		 return new PartnerApisResponse(ErrorCodeService.getMappedErrorCodeAndMessage(new ErrorCode(CP_FETCH_CLIENT_BALANCE, "YPP", "", "DCA063")));
		}
	}